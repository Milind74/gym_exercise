{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef, unstable_useIsFocusVisible as useIsFocusVisible } from '@mui/utils';\n\n/**\r\n * The basic building block for creating custom switches.\r\n *\r\n * Demos:\r\n *\r\n * - [Switches](https://mui.com/components/switches/)\r\n */\nexport default function useSwitch(props) {\n  const {\n    checked: checkedProp,\n    defaultChecked,\n    disabled,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible,\n    readOnly,\n    required\n  } = props;\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'Switch',\n    state: 'checked'\n  });\n  const handleInputChange = (event, otherHandler) => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    setCheckedState(event.target.checked);\n    onChange == null ? void 0 : onChange(event);\n    otherHandler == null ? void 0 : otherHandler(event);\n  };\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n  React.useEffect(() => {\n    isFocusVisibleRef.current = focusVisible;\n  }, [focusVisible, isFocusVisibleRef]);\n  const inputRef = React.useRef(null);\n  const handleFocus = (event, otherHandler) => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!inputRef.current) {\n      inputRef.current = event.currentTarget;\n    }\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n      onFocusVisible == null ? void 0 : onFocusVisible(event);\n    }\n    onFocus == null ? void 0 : onFocus(event);\n    otherHandler == null ? void 0 : otherHandler(event);\n  };\n  const handleBlur = (event, otherHandler) => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    onBlur == null ? void 0 : onBlur(event);\n    otherHandler == null ? void 0 : otherHandler(event);\n  };\n  const handleRefChange = useForkRef(focusVisibleRef, inputRef);\n  const getInputProps = (otherProps = {}) => _extends({\n    checked: checkedProp,\n    defaultChecked,\n    disabled,\n    readOnly,\n    required,\n    type: 'checkbox'\n  }, otherProps, {\n    onChange: event => handleInputChange(event, otherProps.onChange),\n    onFocus: event => handleFocus(event, otherProps.onFocus),\n    onBlur: event => handleBlur(event, otherProps.onBlur),\n    ref: handleRefChange\n  });\n  return {\n    checked,\n    disabled: Boolean(disabled),\n    focusVisible,\n    getInputProps,\n    readOnly: Boolean(readOnly)\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useControlled","useControlled","unstable_useForkRef","useForkRef","unstable_useIsFocusVisible","useIsFocusVisible","useSwitch","props","checked","checkedProp","defaultChecked","disabled","onBlur","onChange","onFocus","onFocusVisible","readOnly","required","setCheckedState","controlled","default","Boolean","name","state","handleInputChange","event","otherHandler","nativeEvent","defaultPrevented","target","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","ref","focusVisibleRef","focusVisible","setFocusVisible","useState","useEffect","current","inputRef","useRef","handleFocus","currentTarget","handleBlur","handleRefChange","getInputProps","otherProps","type"],"sources":["C:/Users/MILIND/OneDrive/Desktop/gym_exercise/node_modules/@mui/base/SwitchUnstyled/useSwitch.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef, unstable_useIsFocusVisible as useIsFocusVisible } from '@mui/utils';\r\n\r\n/**\r\n * The basic building block for creating custom switches.\r\n *\r\n * Demos:\r\n *\r\n * - [Switches](https://mui.com/components/switches/)\r\n */\r\nexport default function useSwitch(props) {\r\n  const {\r\n    checked: checkedProp,\r\n    defaultChecked,\r\n    disabled,\r\n    onBlur,\r\n    onChange,\r\n    onFocus,\r\n    onFocusVisible,\r\n    readOnly,\r\n    required\r\n  } = props;\r\n  const [checked, setCheckedState] = useControlled({\r\n    controlled: checkedProp,\r\n    default: Boolean(defaultChecked),\r\n    name: 'Switch',\r\n    state: 'checked'\r\n  });\r\n\r\n  const handleInputChange = (event, otherHandler) => {\r\n    // Workaround for https://github.com/facebook/react/issues/9023\r\n    if (event.nativeEvent.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    setCheckedState(event.target.checked);\r\n    onChange == null ? void 0 : onChange(event);\r\n    otherHandler == null ? void 0 : otherHandler(event);\r\n  };\r\n\r\n  const {\r\n    isFocusVisibleRef,\r\n    onBlur: handleBlurVisible,\r\n    onFocus: handleFocusVisible,\r\n    ref: focusVisibleRef\r\n  } = useIsFocusVisible();\r\n  const [focusVisible, setFocusVisible] = React.useState(false);\r\n\r\n  if (disabled && focusVisible) {\r\n    setFocusVisible(false);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    isFocusVisibleRef.current = focusVisible;\r\n  }, [focusVisible, isFocusVisibleRef]);\r\n  const inputRef = React.useRef(null);\r\n\r\n  const handleFocus = (event, otherHandler) => {\r\n    // Fix for https://github.com/facebook/react/issues/7769\r\n    if (!inputRef.current) {\r\n      inputRef.current = event.currentTarget;\r\n    }\r\n\r\n    handleFocusVisible(event);\r\n\r\n    if (isFocusVisibleRef.current === true) {\r\n      setFocusVisible(true);\r\n      onFocusVisible == null ? void 0 : onFocusVisible(event);\r\n    }\r\n\r\n    onFocus == null ? void 0 : onFocus(event);\r\n    otherHandler == null ? void 0 : otherHandler(event);\r\n  };\r\n\r\n  const handleBlur = (event, otherHandler) => {\r\n    handleBlurVisible(event);\r\n\r\n    if (isFocusVisibleRef.current === false) {\r\n      setFocusVisible(false);\r\n    }\r\n\r\n    onBlur == null ? void 0 : onBlur(event);\r\n    otherHandler == null ? void 0 : otherHandler(event);\r\n  };\r\n\r\n  const handleRefChange = useForkRef(focusVisibleRef, inputRef);\r\n\r\n  const getInputProps = (otherProps = {}) => _extends({\r\n    checked: checkedProp,\r\n    defaultChecked,\r\n    disabled,\r\n    readOnly,\r\n    required,\r\n    type: 'checkbox'\r\n  }, otherProps, {\r\n    onChange: event => handleInputChange(event, otherProps.onChange),\r\n    onFocus: event => handleFocus(event, otherProps.onFocus),\r\n    onBlur: event => handleBlur(event, otherProps.onBlur),\r\n    ref: handleRefChange\r\n  });\r\n\r\n  return {\r\n    checked,\r\n    disabled: Boolean(disabled),\r\n    focusVisible,\r\n    getInputProps,\r\n    readOnly: Boolean(readOnly)\r\n  };\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}