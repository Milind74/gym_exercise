{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MILIND\\\\OneDrive\\\\Desktop\\\\gym_exercise\\\\src\\\\components\\\\Exercises.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport { Box, Stack, Typography } from '@mui/material';\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\nimport ExerciseCard from './ExerciseCard';\n// import Loader from './Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exercises = ({\n  exercises,\n  setExercises,\n  bodyPart\n}) => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [exercisesPerPage] = useState(6);\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      let exercisesData = [];\n      if (bodyPart === 'all') {\n        exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises?limit=9999', exerciseOptions);\n      } else {\n        exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/?limit=9999bodyPart/${bodyPart}`, exerciseOptions);\n      }\n      setExercises(exercisesData);\n    };\n    fetchExercisesData();\n  }, [bodyPart]);\n\n  // Pagination\n  const indexOfLastExercise = currentPage * exercisesPerPage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\n  const paginate = (event, value) => {\n    setCurrentPage(value);\n    window.scrollTo({\n      top: 1800,\n      behavior: 'smooth'\n    });\n  };\n\n  // if (!currentExercises.length) return <Loader />;\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"exercises\",\n    sx: {\n      mt: {\n        lg: '109px'\n      }\n    },\n    mt: \"50px\",\n    p: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      fontWeight: \"bold\",\n      sx: {\n        fontSize: {\n          lg: '44px',\n          xs: '30px'\n        }\n      },\n      mb: \"46px\",\n      children: \"Showing Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        gap: {\n          lg: '107px',\n          xs: '50px'\n        }\n      },\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      children: currentExercises.map((exercise, idx) => /*#__PURE__*/_jsxDEV(ExerciseCard, {\n        exercise: exercise\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        mt: {\n          lg: '114px',\n          xs: '70px'\n        }\n      },\n      alignItems: \"center\",\n      children: exercises.length > 9 && /*#__PURE__*/_jsxDEV(Pagination, {\n        color: \"standard\",\n        shape: \"rounded\",\n        defaultPage: 1,\n        count: Math.ceil(exercises.length / exercisesPerPage),\n        page: currentPage,\n        onChange: paginate,\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercises, \"qc/w78Pbe1Hwe7FZOf3usGVulUM=\");\n_c = Exercises;\nexport default Exercises;\nvar _c;\n$RefreshReg$(_c, \"Exercises\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","Box","Stack","Typography","exerciseOptions","fetchData","ExerciseCard","jsxDEV","_jsxDEV","Exercises","exercises","setExercises","bodyPart","_s","currentPage","setCurrentPage","exercisesPerPage","fetchExercisesData","exercisesData","indexOfLastExercise","indexOfFirstExercise","currentExercises","slice","paginate","event","value","window","scrollTo","top","behavior","id","sx","mt","lg","p","children","variant","fontWeight","fontSize","xs","mb","fileName","_jsxFileName","lineNumber","columnNumber","direction","gap","flexWrap","justifyContent","map","exercise","idx","alignItems","length","color","shape","defaultPage","count","Math","ceil","page","onChange","size","_c","$RefreshReg$"],"sources":["C:/Users/MILIND/OneDrive/Desktop/gym_exercise/src/components/Exercises.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport { Box, Stack, Typography } from '@mui/material';\r\n\r\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\r\nimport ExerciseCard from './ExerciseCard';\r\n// import Loader from './Loader';\r\n\r\nconst Exercises = ({ exercises, setExercises, bodyPart }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [exercisesPerPage] = useState(6);\r\n\r\n  useEffect(() => {\r\n    const fetchExercisesData = async () => {\r\n      let exercisesData = [];\r\n\r\n      if (bodyPart === 'all') {\r\n        exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises?limit=9999', exerciseOptions);\r\n      } else {\r\n        exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/?limit=9999bodyPart/${bodyPart}`, exerciseOptions);\r\n      }\r\n\r\n      setExercises(exercisesData);\r\n    };\r\n\r\n    fetchExercisesData();\r\n  }, [bodyPart]);\r\n\r\n  // Pagination\r\n  const indexOfLastExercise = currentPage * exercisesPerPage;\r\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\r\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\r\n\r\n  const paginate = (event, value) => {\r\n    setCurrentPage(value);\r\n\r\n    window.scrollTo({ top: 1800, behavior: 'smooth' });\r\n  };\r\n\r\n  // if (!currentExercises.length) return <Loader />;\r\n\r\n  return (\r\n    <Box id=\"exercises\" sx={{ mt: { lg: '109px' } }} mt=\"50px\" p=\"20px\">\r\n      <Typography variant=\"h4\" fontWeight=\"bold\" sx={{ fontSize: { lg: '44px', xs: '30px' } }} mb=\"46px\">Showing Results</Typography>\r\n      <Stack direction=\"row\" sx={{ gap: { lg: '107px', xs: '50px' } }} flexWrap=\"wrap\" justifyContent=\"center\">\r\n        {currentExercises.map((exercise, idx) => (\r\n          <ExerciseCard key={idx} exercise={exercise} />\r\n        ))}\r\n      </Stack>\r\n      <Stack sx={{ mt: { lg: '114px', xs: '70px' } }} alignItems=\"center\">\r\n        {exercises.length > 9 && (\r\n          <Pagination\r\n            color=\"standard\"\r\n            shape=\"rounded\"\r\n            defaultPage={1}\r\n            count={Math.ceil(exercises.length / exercisesPerPage)}\r\n            page={currentPage}\r\n            onChange={paginate}\r\n            size=\"large\"\r\n          />\r\n        )}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Exercises;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}